{"version":3,"sources":["peer-puppet.js","App.js","index.js"],"names":["window","require","desktopCapturer","ipcRenderer","getScreenStream","a","getSources","types","sources","navigator","mediaDevices","getUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","maxWidth","maxHeight","stream","pc","RTCPeerConnection","ondatachannel","e","channel","onmessage","JSON","parse","data","type","screen","width","height","send","onicecandidate","candidate","sdpMid","sdpMLineIndex","candidates","addIceCandidate","push","remoteDescription","i","length","console","log","RTCIceCandidate","createAnswer","offer","screenStream","addStream","setRemoteDescription","setLocalDescription","localDescription","on","description","sdp","App","useState","remoteCode","setRemoteCode","localCode","setLocalCode","controlStatus","setControlStatus","errorMessage","setErrorMessage","ratio","setRatio","login","invoke","code","handleControlState","name","handleError","event","message","useEffect","removeListener","className","style","position","top","left","transform","display","justifyContent","flexDirection","textAlign","onContextMenu","preventDefault","htmlFor","onChange","Number","target","value","handleRatio","defaultValue","toString","selected","onClick","startControl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc66374c.chunk.js","sourcesContent":["const {desktopCapturer, ipcRenderer} = window.require('electron')\r\n\r\nasync function getScreenStream() {\r\n  // 获取桌面流\r\n  const sources = await desktopCapturer.getSources({ types: ['screen'] })\r\n  // 媒体流默认是获取摄像头\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: false,\r\n    video: {\r\n      mandatory: {\r\n        chromeMediaSource: 'desktop',\r\n        chromeMediaSourceId: sources[0].id,\r\n        maxWidth: 1920,\r\n        maxHeight: 1080\r\n      }\r\n    }\r\n  })\r\n  return stream\r\n}\r\n\r\nlet pc = new window.RTCPeerConnection({})\r\n\r\npc.ondatachannel = (e) => {\r\n  e.channel.onmessage = (e) => {\r\n    let { type, data } = JSON.parse(e.data)\r\n    if (type === 'mouse') {\r\n      data.screen = {\r\n          width: window.screen.width,\r\n          height: window.screen.height\r\n        }\r\n    }\r\n    ipcRenderer.send('robot', type, data)\r\n  }\r\n}\r\n\r\n// onicecandidate iceEvent\r\n// addIceCandidate\r\npc.onicecandidate = function (e) {\r\n  const candidate = e.candidate\r\n  if (e.candidate) {\r\n    ipcRenderer.send('forward', 'puppet-candidate', {\r\n      candidate: candidate.candidate,\r\n      sdpMid: candidate.sdpMid,\r\n      sdpMLineIndex: candidate.sdpMLineIndex\r\n    })\r\n  }\r\n}\r\n\r\nlet candidates = []\r\nasync function addIceCandidate(candidate) {\r\n  if (candidate) {\r\n    candidates.push(candidate)\r\n  }\r\n  if (pc.remoteDescription && pc.remoteDescription.type) {\r\n    for (let i = 0; i < candidates.length; i++) {\r\n      console.log(candidates[i]);\r\n      await pc.addIceCandidate(new RTCIceCandidate(candidates[i]))\r\n    }\r\n  }\r\n}\r\n\r\nipcRenderer.on('candidate', (e, data) => {\r\n  addIceCandidate(data)\r\n})\r\n\r\nasync function createAnswer(offer) {\r\n  let screenStream = await getScreenStream()\r\n  pc.addStream(screenStream)\r\n  await pc.setRemoteDescription(offer)\r\n  await pc.setLocalDescription(await pc.createAnswer())\r\n  return pc.localDescription\r\n}\r\n\r\nipcRenderer.on('offer', async (e, offer) => {\r\n  const description = await createAnswer(offer)\r\n  ipcRenderer.send('forward', 'answer', { type: description.type, sdp: description.sdp })\r\n  await addIceCandidate()\r\n  candidates = []\r\n})\r\n\r\nipcRenderer.on('exit-be-controlled', () => {\r\n  pc = new window.RTCPeerConnection({})\r\n  pc.ondatachannel = (e) => {\r\n    e.channel.onmessage = (e) => {\r\n      let { type, data } = JSON.parse(e.data)\r\n      if (type === 'mouse') {\r\n        data.screen = {\r\n            width: window.screen.width,\r\n            height: window.screen.height\r\n          }\r\n      }\r\n      ipcRenderer.send('robot', type, data)\r\n    }\r\n  }\r\n})\r\n","import React, { useEffect, useState } from 'react'\nimport './peer-puppet.js'\nconst {ipcRenderer} = window.require('electron')\n\nfunction App() {\n  const [remoteCode, setRemoteCode] = useState('')\n  const [localCode, setLocalCode] = useState('')\n  const [controlStatus, setControlStatus] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [ratio, setRatio] = useState(1)\n\n  const login = async () => {\n    let code = await ipcRenderer.invoke('login')\n    setLocalCode(code)\n  }\n  const handleControlState = (e, name, type) => {\n    if (type === 1) {\n      setControlStatus(`正在远程控制${name}`)\n    } else if (type === 0) {\n      setControlStatus(`正在被${name}控制`)\n    } else if (type === 2) {\n      setControlStatus('')\n    }\n  }\n  const startControl = (remoteCode) => {\n    ipcRenderer.send('control', remoteCode)\n  }\n  const handleContextMenu = (event) => {\n    event.preventDefault()\n    ipcRenderer.send('copy-popup')\n  }\n  const handleExit = (event) => {\n    ipcRenderer.send('exit-control')\n  }\n  const handleError = (event, message) => {\n    setErrorMessage(message)\n  }\n  const handleRatio = (e) => {\n    setRatio(Number(e.target.value))\n  }\n\n  useEffect(() => {\n    login()\n    ipcRenderer.on('control-state-change', handleControlState)\n    ipcRenderer.on('error', handleError)\n    return () => {\n      ipcRenderer.removeListener('control-state-change', handleControlState)\n      ipcRenderer.removeListener('error', handleError)\n    }\n  }, [])\n\n  useEffect(() => {\n    ipcRenderer.send('set-ratio', ratio)\n  }, [ratio])\n\n  return (\n    <div className=\"App\" style={{position: 'absolute', top: '30%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n      {\n        controlStatus === '' ?\n          <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\n            <h3 style={{ textAlign: 'center' }}>\n              你的状态码:\n              <span onContextMenu={e => handleContextMenu(e)}>\n                {localCode}\n              </span>\n            </h3>\n            <div>\n              <label htmlFor=\"setRatio\">设置屏幕缩放比</label>\n              <select id=\"setRatio\" onChange={e => handleRatio(e)} defaultValue={ratio.toString()}>\n                <option value=\"1\" selected={ratio === 1}>1</option>\n                <option value=\"1.25\" selected={ratio === 1.25}>1.25</option>\n                <option value=\"1.5\" selected={ratio === 1.5}>1.5</option>\n              </select>\n              <button onClick={() => login()}>刷新状态码</button>\n            </div>\n            <input type=\"text\" value={remoteCode} onChange={(e) => {setRemoteCode(e.target.value)}} />\n            <button onClick={() => startControl(remoteCode)}>确认连接</button>\n            {errorMessage && <p>{errorMessage}</p>}\n          </div> :\n          <div>\n            <h3>{controlStatus}</h3>\n            <h5>你的状态码:{localCode}</h5>\n            <button onClick={ (e) => {handleExit(e)}}>退出连接</button>\n          </div>\n      }    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}